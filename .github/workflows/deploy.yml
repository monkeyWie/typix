name: Deploy
on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  get-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-release.outputs.version }}
      upload_url: ${{ steps.get-release.outputs.upload_url }}

    steps:
      - uses: monkeyWie/get-latest-release@v2.1
        id: get-release
        with:
          myToken: ${{ github.token }}
  web-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install Dependencies
        run: |
          pnpm install

      - name: Deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          AUTH_EMAIL_RESEND_API_KEY: ${{ secrets.AUTH_EMAIL_RESEND_API_KEY }}
          AUTH_SOCIAL_GOOGLE_CLIENT_ID: ${{ secrets.AUTH_SOCIAL_GOOGLE_CLIENT_ID }}
          AUTH_SOCIAL_GOOGLE_CLIENT_SECRET: ${{ secrets.AUTH_SOCIAL_GOOGLE_CLIENT_SECRET }}
          AUTH_SOCIAL_GITHUB_CLIENT_ID: ${{ secrets.AUTH_SOCIAL_GITHUB_CLIENT_ID }}
          AUTH_SOCIAL_GITHUB_CLIENT_SECRET: ${{ secrets.AUTH_SOCIAL_GITHUB_CLIENT_SECRET }}
        run: |
          # build application
          sed -i "s/DATABASE_ID/${{ secrets.CLOUDFLARE_DATABASE_ID }}/g" wrangler.toml
          node .github/workflows/scripts/deploy.js --production
  docker-deploy:
    runs-on: ubuntu-latest
    needs: [get-release]
    steps:
      - name: Remove unnecessary files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: liwei2633
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          VERSION: ${{ needs.get-release.outputs.version }}
        with:
          context: .
          push: true
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          tags: |
            liwei2633/typix:latest
            liwei2633/typix:v${{ env.VERSION }}
